{"ast":null,"code":"var _s = $RefreshSig$();\nimport react, { useEffect, useState } from \"react\";\nimport { ReactDOM } from \"react-dom\";\nvar stat = \"true\";\nexport var A = \"shiv\";\nfunction GameStatus() {\n  _s();\n  useEffect(() => {\n    const checkCollision = () => {\n      const array = document.getElementsByClassName('redcar');\n      const mx = document.getElementById('main').getBoundingClientRect().x;\n      const my = document.getElementById('main').getBoundingClientRect().y;\n      for (let i = 0; i < array.length; i++) {\n        const x = array[i].getBoundingClientRect().x;\n        const y = array[i].getBoundingClientRect().y;\n        if (Math.abs(mx - x) <= 30 && Math.abs(my - y) <= 20) {\n          // alert('Shapes are touching!');\n          // var sc=document.getElementById('score');\n          console.log(\"GAME OVER!\");\n          // sc.innerText=0;\n          stat = false;\n\n          // Stop checking if a collision is detected\n        }\n      }\n    };\n\n    const interval = setInterval(checkCollision, 60);\n    return () => clearInterval(interval);\n  }, []);\n}\n_s(GameStatus, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GameStatus;\nexport default GameStatus;\nvar _c;\n$RefreshReg$(_c, \"GameStatus\");","map":{"version":3,"names":["react","useEffect","useState","ReactDOM","stat","A","GameStatus","_s","checkCollision","array","document","getElementsByClassName","mx","getElementById","getBoundingClientRect","x","my","y","i","length","Math","abs","console","log","interval","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/shiv/Desktop/gitterminal/tinny-game/tinny-game/src/container/Gameflow.js"],"sourcesContent":["import react, {useEffect,useState } from \"react\";\r\n\r\nimport { ReactDOM } from \"react-dom\";\r\nvar stat=\"true\"\r\n\r\nexport var A=\"shiv\";\r\n\r\nfunction GameStatus() {\r\n  \r\n  \r\n  \r\n    useEffect(() => { \r\n      const checkCollision = () => {\r\n        const array = document.getElementsByClassName('redcar');\r\n        const mx = document.getElementById('main').getBoundingClientRect().x;\r\n        const my = document.getElementById('main').getBoundingClientRect().y;\r\n        for (let i = 0; i < array.length; i++) {\r\n             \r\n          const x = array[i].getBoundingClientRect().x;\r\n          const y = array[i].getBoundingClientRect().y;\r\n          if (Math.abs(mx - x) <= 30 && Math.abs(my - y) <= 20) {\r\n            // alert('Shapes are touching!');\r\n            // var sc=document.getElementById('score');\r\n            console.log(\"GAME OVER!\")\r\n            // sc.innerText=0;\r\n            stat=false\r\n            \r\n  \r\n            \r\n      \r\n        \r\n            // Stop checking if a collision is detected\r\n          }\r\n        }\r\n      };\r\n  \r\n      const interval = setInterval(checkCollision, 60);\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n  \r\n    \r\n  }\r\nexport default GameStatus;\r\n\r\n\r\n  "],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAEhD,SAASC,QAAQ,QAAQ,WAAW;AACpC,IAAIC,IAAI,GAAC,MAAM;AAEf,OAAO,IAAIC,CAAC,GAAC,MAAM;AAEnB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAIlBN,SAAS,CAAC,MAAM;IACd,MAAMO,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,QAAQ,CAAC;MACvD,MAAMC,EAAE,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAACC,CAAC;MACpE,MAAMC,EAAE,GAAGN,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAACG,CAAC;MACpE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,KAAK,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;QAErC,MAAMH,CAAC,GAAGN,KAAK,CAACS,CAAC,CAAC,CAACJ,qBAAqB,CAAC,CAAC,CAACC,CAAC;QAC5C,MAAME,CAAC,GAAGR,KAAK,CAACS,CAAC,CAAC,CAACJ,qBAAqB,CAAC,CAAC,CAACG,CAAC;QAC5C,IAAIG,IAAI,CAACC,GAAG,CAACT,EAAE,GAAGG,CAAC,CAAC,IAAI,EAAE,IAAIK,IAAI,CAACC,GAAG,CAACL,EAAE,GAAGC,CAAC,CAAC,IAAI,EAAE,EAAE;UACpD;UACA;UACAK,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;UACzB;UACAnB,IAAI,GAAC,KAAK;;UAMV;QACF;MACF;IACF,CAAC;;IAED,MAAMoB,QAAQ,GAAGC,WAAW,CAACjB,cAAc,EAAE,EAAE,CAAC;IAEhD,OAAO,MAAMkB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;AAGR;AAACjB,EAAA,CAnCMD,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}